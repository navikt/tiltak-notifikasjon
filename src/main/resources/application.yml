spring:
  application:
    name: tiltak-notifikasjon
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: "tiltak-notifikasjon-1"
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  datasource:
    url: "jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USERNAME}&password=${DB_PASSWORD}"
    hikari:
      connection-test-query: select 1
      maximum-pool-size: 4
management:
  endpoints:
    web:
      base-path: /internal/
      exposure:
        include: info, health, metrics, prometheus


tiltak-notifikasjon:
  unleash:
    api-uri: ${UNLEASH_SERVER_API_URL}/api
    api-token: ${UNLEASH_SERVER_API_TOKEN}